// Gmail-specific dispute letter sender with PDF generation
// Compatible with CommonJS format

require('dotenv').config();
const nodemailer = require('nodemailer');
const path = require('path');
const fs = require('fs');
const PDFDocument = require('pdfkit');

// Gmail-specific transporter
const gmailTransporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.GMAIL_USER,       // Gmail address
    pass: process.env.GMAIL_APP_PASS    // 16-character App Password
  }
});

/**
 * Generates a formatted legal dispute letter as PDF
 * @param {string} clientName - Client's full name
 * @param {string} issue - Description of the dispute
 * @param {string} outputPath - Path where PDF will be saved
 * @returns {Promise<string>} - Path to generated PDF
 */
function generateDisputePDF(clientName, issue, outputPath) {
  return new Promise((resolve, reject) => {
    // Create PDF document
    const doc = new PDFDocument({
      margins: { top: 50, bottom: 50, left: 50, right: 50 }
    });
    
    // Set up file writing
    const writeStream = fs.createWriteStream(outputPath);
    doc.pipe(writeStream);
    
    // Add date
    const today = new Date().toLocaleDateString('en-CA', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
    doc.fontSize(10).text(today, { align: 'right' });
    doc.moveDown(2);
    
    // Add letter content
    doc.fontSize(14).text('To Whom It May Concern,', { lineGap: 10 });
    doc.moveDown();
    
    doc.fontSize(12).text(`My name is ${clientName}, and I am writing to formally dispute the following issue:`, { lineGap: 10 });
    doc.moveDown();
    
    // Format the issue with proper indentation
    doc.fontSize(12).text(issue, { 
      indent: 20,
      lineGap: 10,
      align: 'justify'
    });
    doc.moveDown();
    
    doc.fontSize(12).text('I respectfully request that this matter be investigated and resolved as soon as possible.', { lineGap: 10 });
    doc.moveDown(2);
    
    doc.fontSize(12).text('Sincerely,', { lineGap: 20 });
    doc.fontSize(12).text(clientName);
    
    // Add footer
    doc.fontSize(8).text('Generated by SmartDispute.ai - Empowering Canadians through AI-driven legal assistance', {
      align: 'center',
      bottom: 30
    });
    
    // Finalize PDF
    doc.end();
    
    // Handle stream events
    writeStream.on('finish', () => resolve(outputPath));
    writeStream.on('error', reject);
  });
}

/**
 * Sends a dispute letter to a client via Gmail
 * 
 * @param {string} clientEmail - Client's email address
 * @param {string} clientName - Client's full name
 * @param {string} pdfPath - Optional path to existing PDF (if null, will generate one)
 * @param {string} issue - Issue description (used if no PDF provided)
 * @returns {Promise<Object>} Result object with success status
 */
async function sendDisputeLetter(clientEmail, clientName, pdfPath, issue) {
  try {
    // Validate inputs
    if (!clientEmail) throw new Error('Client email is required');
    if (!clientName) throw new Error('Client name is required');
    
    // Handle PDF content (existing file or generate new one)
    let finalPdfPath = pdfPath;
    if (!pdfPath || !fs.existsSync(pdfPath)) {
      if (!issue) throw new Error('Either a PDF path or issue description must be provided');
      
      // Generate a new PDF file
      finalPdfPath = path.resolve(__dirname, 'dispute_letter.pdf');
      await generateDisputePDF(clientName, issue, finalPdfPath);
    }
    
    // Prepare email options
    const mailOptions = {
      from: `SmartDispute.ai <${process.env.GMAIL_USER}>`,
      to: clientEmail,
      subject: 'Your Legal Dispute Letter is Ready',
      text: `Hi ${clientName},

Attached is your legal dispute letter that was created through SmartDispute.ai.

If you need additional help or want to submit this letter directly to a credit bureau, housing provider, or government agency, please reply to this email.

Thank you for using SmartDispute.ai.
      
- The SmartDispute.ai Team`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background-color: #2a4d69; color: white; padding: 20px; text-align: center;">
            <h1 style="margin: 0;">SmartDispute.ai</h1>
          </div>
          <div style="padding: 20px; border: 1px solid #ddd; border-top: none;">
            <p>Hi ${clientName},</p>
            <p>Attached is your <strong>legal dispute letter</strong> that was created through SmartDispute.ai.</p>
            <p>If you need additional help or want to submit this letter directly to a credit bureau, housing provider, or government agency, please reply to this email.</p>
            <p>Thank you for using SmartDispute.ai.</p>
            <p>- The SmartDispute.ai Team</p>
          </div>
          <div style="background-color: #f5f5f5; padding: 10px; text-align: center; font-size: 12px; color: #666;">
            <p>© ${new Date().getFullYear()} SmartDispute.ai - Empowering Canadians with AI-driven legal assistance</p>
          </div>
        </div>
      `,
      attachments: [
        {
          filename: path.basename(finalPdfPath) || 'dispute_letter.pdf',
          path: finalPdfPath
        }
      ]
    };
    
    // Send email
    const info = await gmailTransporter.sendMail(mailOptions);
    console.log('✅ Email sent successfully to', clientEmail);
    return {
      success: true,
      messageId: info.messageId,
      recipient: clientEmail,
      timestamp: new Date().toISOString()
    };
  } catch (error) {
    console.error('❌ Error sending dispute letter:', error.message);
    return {
      success: false,
      error: error.message,
      recipient: clientEmail
    };
  }
}

// Export as CommonJS module
module.exports = sendDisputeLetter;