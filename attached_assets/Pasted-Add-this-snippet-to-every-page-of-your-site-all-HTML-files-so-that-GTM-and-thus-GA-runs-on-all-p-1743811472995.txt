Add this snippet to every page of your site (all HTML files) so that GTM (and thus GA) runs on all pages. If you have a templating system or a common include for head/body, you can put it there. On Replit, if using a static site, you may need to paste it into each HTML file manually (or find a way to factor it into a single included file). After adding, deploy or run your Replit site so the changes go live. Step 4: Set Up GA4 Configuration in GTM
Now, with GTM on your site, you will use it to load GA4. In the GTM web interface, go to Tags → New. Choose Google Analytics: GA4 Configuration as the tag type (this tag will initialize GA4 on pages). Enter your GA4 Measurement ID (the G-XXXXXXXX copied earlier) into the tag settings​
ANALYTICSMANIA.COM
. Ensure “Send a page view event when this configuration loads” is checked (so it automatically sends page_view events). Set the trigger to All Pages (so it fires on every page load). Name this tag “GA4 - Config” or similar, and save. What this does: whenever any page loads, GTM will insert the GA4 gtag code with your ID, and GA4 will begin tracking page views and basic events. Essentially, you’ve connected GTM to GA4. Step 5: Publish and Test
Submit your GTM container (click Submit and publish the changes). Now open your website and check if data is flowing to GA4:
In Google Analytics, go to Realtime report. You should see your own visit show up (perhaps give it a minute). If it’s working, you’ll see an active user count, and page_view events.
You can also use GA4’s DebugView alongside GTM’s Preview. If you enable GTM Preview (as mentioned earlier) and also open GA4’s DebugView, your session will appear with a debug flag, and you can see events in detail​
ANALYTICSMANIA.COM
​
ANALYTICSMANIA.COM
. Look for page_view events and any automatic events like scroll or outbound clicks (GA4’s enhanced measurement might log a few events by default).
If you don’t see data, double-check that your GTM code is correctly placed on the site (view page source in the browser to ensure the script is there). Also verify the Measurement ID in the GA4 tag matches the one in GA. At this point, GA4 is recording basic metrics: page views, scroll (90%), outbound clicks, etc., thanks to enhanced measurement​
SEMRUSH.COM
. And with the custom tags we configured in Section 2 (CTA click, custom scrolls), those should also start sending data. You can test a CTA click yourself and watch it appear in GA4 DebugView as a cta_click event, for example. Step 6: Set Up Conversion Goals in GA4
In GA4, you don’t have “Goals” like Universal Analytics did, but you can mark events as Conversions. Go to Admin → Events in your GA4 property. You’ll see a list of events GA4 is receiving (after you’ve tested a few). Find your CTA click event name (e.g., cta_click) and toggle the switch to mark it as a conversion. Now GA4 will count that event in the Conversion metrics. Do the same for form submissions or any other user actions that represent a successful conversion (we will track the form in the next section). For example, if your CTA leads to a contact form submission event, you would mark that event as a conversion. By doing this, you can easily see conversion rates in GA4 reports (e.g., the percentage of sessions that resulted in a form submission). Step 7: (Optional) Google Tag Manager Extras:
With GTM in place, you can add other tags as needed. Common examples: Google Ads conversion tags, Facebook Pixel, Hotjar, etc. GTM allows you to manage all these in one place without editing your site code again. If you do add more tags, always test in preview mode to ensure they fire correctly. In summary, the flow is: GTM snippet on site -> GTM loads and fires GA4 config tag on all pages -> GA4 starts collecting data -> Custom triggers in GTM fire additional GA4 event tags (CTA clicks, etc.) -> GA4 receives those events. With GA4 and GTM set up, you have a robust measurement framework in place on your Replit website.
4. Building a Contact/Subscription Form with Conversion Tracking
An essential part of your conversion funnel is the contact or service subscription form – this is typically the final step where a visitor actually converts into a lead or customer (by giving you their info, requesting a quote, etc.). We’ll address two aspects: designing and implementing the form on your Replit site, and tracking form submissions in GA4 (via GTM events or other means).
Designing and Implementing the Form
Form Placement: Decide where this form lives in your site structure. Common approaches for service businesses are:
A dedicated “Contact Us” or “Get a Quote” page that the CTA buttons lead to. This page can have a detailed form and perhaps additional contact info.
An embedded form section on the landing page or every page (for example, a footer or sidebar form). On a multi-page site, you might have a shorter sign-up widget on each page plus a full “Contact” page.
A good strategy is to have a separate Contact page (for users who navigate there via menu) and to link your CTA directly to that or open it in a modal. For simplicity, we’ll assume a dedicated contact page with a form. Form Fields: Keep the form as short and straightforward as possible – only ask for information you truly need to start the conversation. For instance, Name, Email, Phone (if calls are relevant), and a Message or dropdown to select a service of interest. The more fields you have, the more friction for the user. If you only need their email to start, maybe just go with “email and a message” or “email and name” initially. Remember, you can always gather more info later once they’re engaged. HTML Form Example: Below is a sample contact form HTML. This example uses an action to Formspree (a service that emails you form submissions), which is great for static sites like on Replit because you might not have your own server script. You can replace the action URL with your own backend endpoint if you have one.
html
Copy
Edit
