In the code above, the <div class="sticky-cta"> will stick to the bottom of the screen, and inside it a CTA link is styled as a button. You would of course replace the href with the target of your CTA (e.g., a contact page or a sign-up form). This approach ensures the CTA is always one tap away for mobile users, which can lift conversion rates.
Tracking CTA Clicks with Google Tag Manager
Designing a great CTA is only half the battle – you also need to track how users interact with it. Google Tag Manager (GTM) makes it possible to record CTA clicks (and other behaviors like scrolling or button taps) as events in Google Analytics 4 (GA4). This data is crucial: you can see how many people click the CTA, how far they scroll before clicking (or not clicking), and use this to improve your funnel. We will use GTM to listen for CTA click events and send them to GA4. Here’s how to set that up:
Ensure GTM is installed on your site (we’ll cover setting up GTM in the next section). Once GTM’s snippet is on your pages, you can configure tags and triggers from the GTM web interface.
Add a unique identifier to your CTA element in HTML. For example, give your main CTA button an ID or unique class. This makes it easy to target in GTM. For instance:
html
Copy
Edit
<button id="cta-primary" class="cta-button">Contact Us Now</button>
Here we’ve added id="cta-primary". If your CTA is a link (<a> tag), you can similarly add an id or a distinctive class name.
Enable Click Tracking in GTM: In the GTM interface, go to Triggers and create a new trigger for clicks. GTM can listen for all clicks or just link clicks. Since a CTA might be a <button> (not an <a> link), choose “All Elements” or “Just Links” trigger depending on your case:
For a button (non-link), use All Elements -> Click trigger.
For an anchor link (e.g., <a href="#contact">), you can use Just Links -> Click trigger.
In either case, configure the trigger to fire only on your specific element: e.g., Click ID equals cta-primary (the ID we set in the HTML). GTM’s built-in click listener will detect clicks on any element once a click trigger is set up​
ANALYTICSMANIA.COM
​
ANALYTICSMANIA.COM
. By adding a rule (condition) for Click ID or Click Classes, you ensure it triggers only for your CTA. For example:
Trigger Type: “Element Click”
Selection: “All Elements” (if a button) or “Just Links” (if anchor)
Condition: Click ID = “cta-primary” (you can select “Click ID” from variables dropdown once click variables are enabled).
GTM may require you to enable built-in variables like Click ID, Click Text, etc., to use in your trigger conditions​
ANALYTICSMANIA.COM
. Ensure those are checked in GTM (in Variables section, under Built-in Variables, enable the Click ones).
Create a GA4 Event Tag: Now go to Tags in GTM and create a new tag that will send an event to Google Analytics. Choose Google Analytics: GA4 Event as the tag type. You’ll need to have a GA4 Configuration tag set up (or the Measurement ID handy) – more on that in the GA setup section. In the Event Tag settings:
Configuration Tag: select your GA4 config (this contains your GA Measurement ID).
Event Name: choose a name like "cta_click" or something descriptive (e.g., "contact_button_click"). This event name will appear in GA4.
Event Parameters: you can optionally send additional info, like which CTA or page. For instance, you could send a parameter cta_text = {{Click Text}} to capture the button text, or page_path = {{Page Path}}.
Trigger: attach the click trigger you created (e.g., “CTA Primary Click”) to this tag.
Save and publish your GTM container. Now, whenever a user clicks that CTA, GTM will fire the tag and send an event to GA4.
Test the Setup: It’s important to test that the click is being recorded. GTM provides a Preview mode – click the Preview button in GTM to open your site in debug mode. When you click the CTA on your site, you should see a “gtm.click” or similar event in the debug panel, and confirm that your GA4 Event tag fired. In GA4, you can also check the Realtime reports or the DebugView to see the incoming event. Each click should register as an event with the name you set (e.g., cta_click). Using GTM’s preview ensures the tracking works before you rely on the data.
With this in place, you’ll have data on CTA clicks. In GA4, you can mark this event as a conversion (we’ll cover that soon) so that you can easily measure conversion rates. For example, if 100 people visit the page and 10 trigger cta_click, that’s a 10% conversion on CTA – useful info!
Tracking Scroll Depth and User Engagement
Beyond clicks, scroll tracking is another insightful metric for a conversion funnel. It shows how far down the page users scroll, which can indicate if they are seeing important content or losing interest. You can track scroll depth with GTM as well:
GA4 Automatic Scroll Tracking: By default, GA4’s Enhanced Measurement can auto-track a “scroll” event when a user reaches 90% of the page height​
SEMRUSH.COM
. This is enabled in GA4 settings (and usually on by default). A “scroll” event (90%) appears in GA4 which basically means the user viewed almost the entire page. This is a good proxy for reading engagement.
Custom Scroll Triggers: If you want more granular data (e.g., 25%, 50%, 75% scroll), GTM can help. In GTM, create a Scroll Depth trigger:
Set trigger to fire at certain percentages (you can specify multiple, like 25, 50, 75, 100).
Optionally specify it should track vertical scroll (most common) and the whole page.
This trigger will activate when the user scrolls past those percentages of page height​
SUPPORT.GOOGLE.COM
.
Then link this trigger to a GA4 Event tag (similar to the click tag). For instance, an Event Name could be scroll_depth with a parameter for percent. GTM provides a variable {{ScrollDepthThreshold}} which gives the percentage reached. So you might send an event scroll_depth with parameter percent=50 or percent=75. In GA4 you’ll then see events when users hit those scroll points. Note: If you use custom scroll events, consider disabling the default 90% scroll event in GA4 to avoid duplicate data​
SEMRUSH.COM
​
SEMRUSH.COM
 (you can turn off GA4's built-in scroll tracking in the GA4 web stream settings if needed).
Element Visibility (for important sections): Another approach is using GTM’s Element Visibility trigger to track if a certain page section comes into view. For example, if you have a pricing table or a contact form down the page, you can trigger an event when that element is scrolled into view. This can tell you, “How many users scrolled far enough to see the pricing section?” You’d set the trigger to watch an element (by CSS selector or ID) and fire a GA4 event like section_view when visible.
Tracking scroll and element views helps you understand user behavior before the CTA click. If many people never scroll to see your full offering, you might need to reorder or shorten content. If they scroll all the way but don’t click the CTA, perhaps the CTA text or offer isn’t compelling enough and needs tweaking. All these interactions (CTA clicks, scroll events) will be sent via GTM into GA4, where you can analyze them. We’ll discuss setting up GA4 next, as that’s needed for these events to be received.
3. Setting Up Google Analytics 4 (GA4) and Google Tag Manager on Replit
Now that we have a plan for what to track, let’s configure how to track it. We’ll set up Google Analytics 4 for your website and use Google Tag Manager (GTM) to deploy the tracking codes (tags) including GA4 and the events we described. Replit websites are essentially like any other website, so the integration involves adding the GA/GTM snippets to your HTML files. Follow these step-by-step instructions to get GA4 and GTM running on your multi-page site: Step 1: Create a Google Analytics 4 Property
If you haven’t already, go to the Google Analytics homepage and set up a GA4 property for your website. In GA, navigate to Admin → Create Property. Provide a name (e.g., “My Service Website GA4”), set the time zone and currency, and complete the setup wizard. When done, you’ll have a new GA4 property. Next, you need a Data Stream for your website. In GA4 Admin, under your property, click Data Streams and choose Web. Enter your website’s URL (if you have a custom domain or use the Replit URL) and name the stream (e.g., “MySite Web”). GA4 will create a measurement ID for you (looks like G-XXXXXXXXX). Copy the Measurement ID – we’ll need it soon​
ANALYTICSMANIA.COM
. It starts with “G-”. (If you already have a GA4 property and data stream created, just locate the measurement ID in the Data Stream settings and copy it.) Step 2: Create a Google Tag Manager Account and Container
Go to tagmanager.google.com and create an account for your project (e.g., use your business name). Within that account, create a Container for your website (choose Web as the platform). For example, “My Service Site Container”. Once created, GTM will show you the installation code snippet – it consists of a <script> and a <noscript> section with your unique container ID (GTM-XXXXX). Keep this snippet handy (you can always access it via GTM interface under Admin → Install Google Tag Manager). It looks like this: